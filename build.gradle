group 'my.cloud'
version '1.0-SNAPSHOT'

allprojects {
    apply plugin: 'idea'
    apply plugin: "java-library"

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'io.netty:netty-all:4.1.63.Final'
        implementation 'commons-io:commons-io:2.8.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    }

    test {
        useJUnitPlatform()
    }
}

project(":cloud-common") {

    dependencies {
        implementation 'commons-codec:commons-codec:1.15'
        implementation 'org.reflections:reflections:0.9.12'
    }
}

project(":cloud-client") {

    project.ext.mainClassName = "my.cloud.client.MainApplication"

    task runClient(dependsOn: classes, type: JavaExec) {
        main = project.mainClassName
        classpath = sourceSets.main.runtimeClasspath
        standardInput = System.in
        workingDir = System.getProperty("user.home")
    }

    task dist(type: Jar) {
        manifest {
            attributes 'Main-Class': project.mainClassName
        }
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        dependsOn configurations.runtimeClasspath
        from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        }
        with jar
    }

    dependencies {
        implementation project(":cloud-common")
    }
}

project(":cloud-server") {

    project.ext.mainClassName = "my.cloud.server.MainServer"

    task runServer(dependsOn: classes, type: JavaExec) {
        main = project.mainClassName
        classpath = sourceSets.main.runtimeClasspath
        standardInput = System.in
        workingDir = "."
    }

    task dist(type: Jar) {
        manifest {
            attributes 'Main-Class': project.mainClassName
        }
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        dependsOn configurations.runtimeClasspath
        from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        }
        with jar
    }

    dependencies {
        implementation project(":cloud-common")
        implementation 'org.postgresql:postgresql:42.2.19'
        implementation 'org.flywaydb:flyway-core:7.8.0'
    }
}